"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
scalar Upload
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

type Mutation {
    # Rooms
    # Реализация в nestJS
    # createRoom(input: CreateUserInput!): Room
    # updateRoom(id: ID!, name: String, description: String, password: String, host_id: ID): Room
    # deleteRoom(id: ID!): DeleteResponse

    # Sounds
    createSoundKit(name: String!, sounds: [Upload!]!): SoundKit
    # @field(resolver: "App\\GraphQL\\Mutations\\CreateSoundKit")

    # Avatars
    # uploadAvatar(file: Upload! @upload(disk: "public", path: "images/avatars", public: true)): Avatar
    uploadAvatar(file: Upload!): Avatar
}

type Query {
    me: User @auth #didn`t work
    user(id: ID! @eq): User @find

    users(username: String @where(operator: "like")): [User!]!
        @paginate(defaultCount: 10)

    room(id: ID! @eq): Room @find
    soundKits(name: String @where(operator: "like")): [SoundKit!]!
        @paginate(defaultCount: 10)
    rooms(name: String @where(operator: "like")): [Room!]!
        @paginate(defaultCount: 10)
}

type User {
    id: ID!
    username: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime
    ownedRooms: [Room!]!
    rooms: [Room!]!
    avatar: Avatar
}

type Room {
    id: ID!
    name: String!
    description: String
    host: User!
    host_id: ID!
    password: String
    users: [User!]!
    created_at: DateTime!
    updated_at: DateTime
}

type Sound {
    id: ID!
    name: String!
    path: String
    sound_kit: SoundKit!
    created_at: DateTime!
    updated_at: DateTime!
}

type SoundKit {
    id: ID!
    name: String!
    author: User
    sounds: [Sound!]!
    created_at: DateTime!
    updated_at: DateTime!
}

type DeleteResponse {
    status: String!
    message: String!
}

type Avatar {
    id: ID!
    path: String!
    created_at: DateTime!
    updated_at: DateTime!
    user: User!
}

# imputs
#diplicated
# input CreateSoundKitInput {
#     icon: String
#     name: String!
#     authorId: ID
# }

# input CreateSoundInput {
#     icon: String
#     name: String!
#     file_path: String
# }

# input CreateUserInput {
#     name: String!
#     host_id: ID!
#     description: String
#     password: String
# }
