"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")


type Mutation {
    # Rooms
    createRoom(input: CreateUserInput!): Room
    updateRoom(id: ID!, name: String, description: String, password: String, host_id: ID): Room
    deleteRoom(id: ID!): DeleteResponse

    # Sounds
    createSoundKit(input: CreateSoundKitInput!): SoundKit 
    addSoundsToSoundKit(soundKitId: ID!, sounds: [CreateSoundInput!]!): SoundKit

}




type Query {
    user(id: ID! @eq): User @find

    users(username: String @where(operator: "like")): [User!]!
        @paginate(defaultCount: 10)

    room(id: ID! @eq): Room @find

    rooms(name: String @where(operator: "like")): [Room!]!
        @paginate(defaultCount: 10)


    soundKit(id: ID! @eq): SoundKit @find

    soundKits(name: String @where(operator: "like")): [SoundKit!]!
        @paginate(defaultCount: 10)
}

type User {
    id: ID!
    username: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime
    ownedRooms: [Room!]!
    rooms: [Room!]!
}

type Room {
    id: ID!
    name: String!
    description: String
    host: User!
    host_id: ID!
    password: String
    users: [User!]!
    created_at: DateTime!
    updated_at: DateTime
}


type Sound {
    id: ID!
    icon: String
    name: String!
    file_path: String!
    soundKit: SoundKit!
}

type SoundKit {
    id: ID!
    icon: String
    name: String!
    author: User
    sounds: [Sound!]!
}

type DeleteResponse {
    status: String!
    message: String!
}



# imputs


input CreateSoundKitInput {
    icon: String
    name: String!
    authorId: ID
}

input CreateSoundInput {
    icon: String
    name: String!
    file_path: String
}

input CreateUserInput {
    name: String!,
    host_id: ID!,
    description: String, 
    password: String
}

